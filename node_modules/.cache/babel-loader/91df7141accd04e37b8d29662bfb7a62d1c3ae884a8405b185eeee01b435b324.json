{"ast":null,"code":"var _jsxFileName = \"/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const initialState = {\n    questions: [],\n    // loading, error, ready, active, finished\n    status: \"loading\"\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    questions,\n    status\n  } = state;\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"LOADING\":\n        return {\n          ...state,\n          status: \"loading\"\n        };\n      case \"ERROR\":\n        return {\n          ...state,\n          status: \"error\"\n        };\n      case \"DATA_RECEVIED\":\n        return {\n          ...state,\n          status: \"ready\",\n          questions: action.payload\n        };\n      case \"ACTIVE\":\n        return {\n          ...state,\n          status: \"active\"\n        };\n      default:\n        throw new Error(\"action unknown\");\n    }\n  }\n  async function fetchQuestions() {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      const {\n        data\n      } = await axios.get(\"http://localhost:9000/questions\");\n      dispatch({\n        type: \"DATA_RECEVIED\",\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: error\n      });\n    }\n  }\n  function handle_LetsStart_ButtonClick() {\n    dispatch({\n      type: \"ACTIVE\"\n    });\n  }\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n      numOfQuestions: questions.length,\n      onLetsStart: handle_LetsStart_ButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), state === \"active\" && /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useEffect","Header","axios","Loader","Error","StartScreen","Question","jsxDEV","_jsxDEV","App","_s","initialState","questions","status","state","dispatch","reducer","action","type","payload","fetchQuestions","data","get","error","handle_LetsStart_ButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","numOfQuestions","length","onLetsStart","_c","$RefreshReg$"],"sources":["/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/App.jsx"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nexport default function App() {\n  const initialState = {\n    questions: [],\n    // loading, error, ready, active, finished\n    status: \"loading\",\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { questions, status } = state;\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"LOADING\":\n        return { ...state, status: \"loading\" };\n      case \"ERROR\":\n        return { ...state, status: \"error\" };\n      case \"DATA_RECEVIED\":\n        return { ...state, status: \"ready\", questions: action.payload };\n      case \"ACTIVE\":\n        return { ...state, status: \"active\" };\n      default:\n        throw new Error(\"action unknown\");\n    }\n  }\n\n  async function fetchQuestions() {\n    try {\n      dispatch({ type: \"LOADING\" });\n      const { data } = await axios.get(\"http://localhost:9000/questions\");\n      dispatch({ type: \"DATA_RECEVIED\", payload: data });\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: error });\n    }\n  }\n\n  function handle_LetsStart_ButtonClick() {\n    dispatch({ type: \"ACTIVE\" });\n  }\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      {status === \"loading\" && <Loader />}\n      {status === \"error\" && <Error />}\n      {status === \"ready\" && (\n        <StartScreen\n          numOfQuestions={questions.length}\n          onLetsStart={handle_LetsStart_ButtonClick}\n        />\n      )}\n      {state === \"active\" && <Question />}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}