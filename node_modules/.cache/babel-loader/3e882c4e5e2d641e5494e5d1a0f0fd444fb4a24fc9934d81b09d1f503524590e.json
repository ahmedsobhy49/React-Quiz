{"ast":null,"code":"var _jsxFileName = \"/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport ProgressBar from \"./ProgressBar\";\nimport FinishScreen from \"./FinishScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  currentDisplayedQuestionIndex: 0,\n  showNextButton: false,\n  score: 0,\n  dark: true\n};\nexport default function App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    questions,\n    status,\n    currentDisplayedQuestionIndex,\n    showNextButton,\n    score\n  } = state;\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"LOADING\":\n        return {\n          ...state,\n          status: \"loading\"\n        };\n      case \"ERROR\":\n        return {\n          ...state,\n          status: \"error\"\n        };\n      case \"DATA_RECEVIED\":\n        return {\n          ...state,\n          status: \"ready\",\n          questions: action.payload\n        };\n      case \"ACTIVE\":\n        return {\n          ...state,\n          status: \"active\"\n        };\n      case \"SHOW_NEXT_BUTTON\":\n        return {\n          ...state,\n          showNextButton: true\n        };\n      case \"SHOW_NEXT_QUESTION\":\n        return {\n          ...state,\n          currentDisplayedQuestionIndex: state.currentDisplayedQuestionIndex + 1,\n          showNextButton: false\n        };\n      case \"CORRECR_ANSWER\":\n        return {\n          ...state,\n          score: state.score + action.payload\n        };\n      case \"FINISH\":\n        return {\n          ...state,\n          status: \"finish\"\n        };\n      case \"RESET\":\n        return {\n          ...initialState\n        };\n      case \"TOGGLE_DARK\":\n        return {\n          ...state,\n          dark: !state.dark\n        };\n      default:\n        throw new Error(\"action unknown\");\n    }\n  }\n  async function fetchQuestions() {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      const {\n        data\n      } = await axios.get(\"http://localhost:9000/questions\");\n      dispatch({\n        type: \"DATA_RECEVIED\",\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: error\n      });\n    }\n  }\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  function handle_LetsStart_ButtonClick() {\n    dispatch({\n      type: \"ACTIVE\"\n    });\n  }\n  function handleShowNextButton() {\n    dispatch({\n      type: \"SHOW_NEXT_BUTTON\"\n    });\n  }\n  function showingNextQuestion() {\n    if (currentDisplayedQuestionIndex === questions.length - 1) {\n      dispatch({\n        type: \"FINISH\"\n      });\n      return;\n    }\n    dispatch({\n      type: \"SHOW_NEXT_QUESTION\"\n    });\n  }\n  function handleScore(points) {\n    dispatch({\n      type: \"CORRECR_ANSWER\",\n      payload: points\n    });\n  }\n  function handleReset() {\n    dispatch({\n      type: \"RESET\"\n    });\n    fetchQuestions();\n  }\n  function toggleDark() {\n    dispatch({\n      type: \"TOGGLE_DARK\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      currentDisplayedQuestionIndex: currentDisplayedQuestionIndex,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 32\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 30\n    }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n      numOfQuestions: questions.length,\n      handle_LetsStart_ButtonClick: handle_LetsStart_ButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(Question, {\n      currentDisplayedQuestion: questions[currentDisplayedQuestionIndex],\n      currentDisplayedQuestionIndex: currentDisplayedQuestionIndex,\n      showNextButton: showNextButton,\n      handleShowNextButton: handleShowNextButton,\n      showingNextQuestion: showingNextQuestion,\n      handleScore: handleScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), status === \"finish\" && /*#__PURE__*/_jsxDEV(FinishScreen, {\n      score: score,\n      handleReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useEffect","Header","axios","Loader","Error","StartScreen","Question","ProgressBar","FinishScreen","jsxDEV","_jsxDEV","initialState","questions","status","currentDisplayedQuestionIndex","showNextButton","score","dark","App","_s","state","dispatch","reducer","action","type","payload","fetchQuestions","data","get","error","handle_LetsStart_ButtonClick","handleShowNextButton","showingNextQuestion","length","handleScore","points","handleReset","toggleDark","className","children","fileName","_jsxFileName","lineNumber","columnNumber","numOfQuestions","currentDisplayedQuestion","_c","$RefreshReg$"],"sources":["/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/App.jsx"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport ProgressBar from \"./ProgressBar\";\nimport FinishScreen from \"./FinishScreen\";\n\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  currentDisplayedQuestionIndex: 0,\n  showNextButton: false,\n  score: 0,\n  dark: true,\n};\n\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const {\n    questions,\n    status,\n    currentDisplayedQuestionIndex,\n    showNextButton,\n    score,\n  } = state;\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"LOADING\":\n        return { ...state, status: \"loading\" };\n      case \"ERROR\":\n        return { ...state, status: \"error\" };\n      case \"DATA_RECEVIED\":\n        return { ...state, status: \"ready\", questions: action.payload };\n      case \"ACTIVE\":\n        return { ...state, status: \"active\" };\n      case \"SHOW_NEXT_BUTTON\":\n        return { ...state, showNextButton: true };\n      case \"SHOW_NEXT_QUESTION\":\n        return {\n          ...state,\n          currentDisplayedQuestionIndex:\n            state.currentDisplayedQuestionIndex + 1,\n          showNextButton: false,\n        };\n      case \"CORRECR_ANSWER\":\n        return { ...state, score: state.score + action.payload };\n      case \"FINISH\":\n        return { ...state, status: \"finish\" };\n      case \"RESET\":\n        return { ...initialState };\n      case \"TOGGLE_DARK\":\n        return { ...state, dark: !state.dark };\n      default:\n        throw new Error(\"action unknown\");\n    }\n  }\n\n  async function fetchQuestions() {\n    try {\n      dispatch({ type: \"LOADING\" });\n      const { data } = await axios.get(\"http://localhost:9000/questions\");\n      dispatch({ type: \"DATA_RECEVIED\", payload: data });\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: error });\n    }\n  }\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  function handle_LetsStart_ButtonClick() {\n    dispatch({ type: \"ACTIVE\" });\n  }\n\n  function handleShowNextButton() {\n    dispatch({ type: \"SHOW_NEXT_BUTTON\" });\n  }\n\n  function showingNextQuestion() {\n    if (currentDisplayedQuestionIndex === questions.length - 1) {\n      dispatch({ type: \"FINISH\" });\n      return;\n    }\n    dispatch({ type: \"SHOW_NEXT_QUESTION\" });\n  }\n\n  function handleScore(points) {\n    dispatch({ type: \"CORRECR_ANSWER\", payload: points });\n  }\n\n  function handleReset() {\n    dispatch({ type: \"RESET\" });\n    fetchQuestions();\n  }\n\n  function toggleDark() {\n    dispatch({ type: \"TOGGLE_DARK\" });\n  }\n  return (\n    <div className=\"app\">\n      <Header />\n      {status === \"active\" && (\n        <ProgressBar\n          currentDisplayedQuestionIndex={currentDisplayedQuestionIndex}\n          score={score}\n        />\n      )}\n      {status === \"loading\" && <Loader />}\n      {status === \"error\" && <Error />}\n      {status === \"ready\" && (\n        <StartScreen\n          numOfQuestions={questions.length}\n          handle_LetsStart_ButtonClick={handle_LetsStart_ButtonClick}\n        />\n      )}\n      {status === \"active\" && (\n        <Question\n          currentDisplayedQuestion={questions[currentDisplayedQuestionIndex]}\n          currentDisplayedQuestionIndex={currentDisplayedQuestionIndex}\n          showNextButton={showNextButton}\n          handleShowNextButton={handleShowNextButton}\n          showingNextQuestion={showingNextQuestion}\n          handleScore={handleScore}\n        />\n      )}\n\n      {status === \"finish\" && (\n        <FinishScreen score={score} handleReset={handleReset} />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}