{"ast":null,"code":"var _jsxFileName = \"/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/Options.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Options({\n  handleShowNextButton,\n  options,\n  correctOption,\n  points,\n  handleScore\n}) {\n  _s();\n  const optionRefs = useRef([]);\n  function handleButtonOptionClick(idxme) {\n    // Loop through option refs\n    optionRefs.current.forEach((optionRef, index) => {\n      if (index === idx) {\n        // Apply 'answer' class to clicked button\n        optionRef.classList.add(\"answer\");\n      }\n      if (index === correctOption) {\n        // Apply 'correct' class to correct option\n        optionRef.classList.add(\"correct\");\n      } else {\n        // Apply 'wrong' class to incorrect options\n        optionRef.classList.add(\"wrong\");\n      }\n      // disable all buttons after click on any button\n      optionRef.disabled = true;\n      handleShowNextButton();\n    });\n    if (e.target.classList.contains(\"correct\")) {\n      handleScore(points);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options\",\n    children: options.map((option, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-option`,\n        ref: el => optionRefs.current[index] = el,\n        onClick: e => {\n          handleButtonOptionClick(index, e);\n        },\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Options, \"ewcEIWKAFHFXRZJt+H5qIqeiCTQ=\");\n_c = Options;\nvar _c;\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Options","handleShowNextButton","options","correctOption","points","handleScore","_s","optionRefs","handleButtonOptionClick","idxme","current","forEach","optionRef","index","idx","classList","add","disabled","e","target","contains","className","children","map","option","ref","el","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/Options.jsx"],"sourcesContent":["import React from \"react\";\nimport { useRef } from \"react\";\nexport default function Options({\n  handleShowNextButton,\n  options,\n  correctOption,\n  points,\n  handleScore,\n}) {\n  const optionRefs = useRef([]);\n\n  function handleButtonOptionClick(idxme) {\n    // Loop through option refs\n    optionRefs.current.forEach((optionRef, index) => {\n      if (index === idx) {\n        // Apply 'answer' class to clicked button\n        optionRef.classList.add(\"answer\");\n      }\n      if (index === correctOption) {\n        // Apply 'correct' class to correct option\n        optionRef.classList.add(\"correct\");\n      } else {\n        // Apply 'wrong' class to incorrect options\n        optionRef.classList.add(\"wrong\");\n      }\n      // disable all buttons after click on any button\n      optionRef.disabled = true;\n      handleShowNextButton();\n    });\n    if (e.target.classList.contains(\"correct\")) {\n      handleScore(points);\n    }\n  }\n\n  return (\n    <div className=\"options\">\n      {options.map((option, index) => {\n        return (\n          <button\n            key={option}\n            className={`btn btn-option`}\n            ref={(el) => (optionRefs.current[index] = el)}\n            onClick={(e) => {\n              handleButtonOptionClick(index, e);\n            }}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,eAAe,SAASC,OAAOA,CAAC;EAC9BC,oBAAoB;EACpBC,OAAO;EACPC,aAAa;EACbC,MAAM;EACNC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,UAAU,GAAGV,MAAM,CAAC,EAAE,CAAC;EAE7B,SAASW,uBAAuBA,CAACC,KAAK,EAAE;IACtC;IACAF,UAAU,CAACG,OAAO,CAACC,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;MAC/C,IAAIA,KAAK,KAAKC,GAAG,EAAE;QACjB;QACAF,SAAS,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MACnC;MACA,IAAIH,KAAK,KAAKV,aAAa,EAAE;QAC3B;QACAS,SAAS,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACpC,CAAC,MAAM;QACL;QACAJ,SAAS,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MAClC;MACA;MACAJ,SAAS,CAACK,QAAQ,GAAG,IAAI;MACzBhB,oBAAoB,CAAC,CAAC;IACxB,CAAC,CAAC;IACF,IAAIiB,CAAC,CAACC,MAAM,CAACJ,SAAS,CAACK,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC1Cf,WAAW,CAACD,MAAM,CAAC;IACrB;EACF;EAEA,oBACEL,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBpB,OAAO,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEX,KAAK,KAAK;MAC9B,oBACEd,OAAA;QAEEsB,SAAS,EAAG,gBAAgB;QAC5BI,GAAG,EAAGC,EAAE,IAAMnB,UAAU,CAACG,OAAO,CAACG,KAAK,CAAC,GAAGa,EAAI;QAC9CC,OAAO,EAAGT,CAAC,IAAK;UACdV,uBAAuB,CAACK,KAAK,EAAEK,CAAC,CAAC;QACnC,CAAE;QAAAI,QAAA,EAEDE;MAAM,GAPFA,MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQL,CAAC;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAlDuBN,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}