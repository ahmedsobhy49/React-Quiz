{"ast":null,"code":"var _jsxFileName = \"/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/Question.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question({\n  currentDisplayingQuestion\n}) {\n  console.log(currentDisplayingQuestion);\n  const {\n    question,\n    options,\n    correctOption,\n    points\n  } = currentDisplayingQuestion;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map(option => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","currentDisplayingQuestion","console","log","question","options","correctOption","points","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","_c","$RefreshReg$"],"sources":["/Users/ziadosama/Desktop/jonas react projects/projects/React Quiz/src/Components/Question.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Question({ currentDisplayingQuestion }) {\n  console.log(currentDisplayingQuestion);\n  const { question, options, correctOption, points } =\n    currentDisplayingQuestion;\n  return (\n    <div className=\"\">\n      <h2>{question}</h2>\n      <div className=\"options\">\n        {options.map((option) => {\n          return <div>{option}</div>;\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAA0B,CAAC,EAAE;EAC9DC,OAAO,CAACC,GAAG,CAACF,yBAAyB,CAAC;EACtC,MAAM;IAAEG,QAAQ;IAAEC,OAAO;IAAEC,aAAa;IAAEC;EAAO,CAAC,GAChDN,yBAAyB;EAC3B,oBACEF,OAAA;IAAKS,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACfV,OAAA;MAAAU,QAAA,EAAKL;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBd,OAAA;MAAKS,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBJ,OAAO,CAACS,GAAG,CAAEC,MAAM,IAAK;QACvB,oBAAOhB,OAAA;UAAAU,QAAA,EAAMM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAC5B,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAduBhB,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}